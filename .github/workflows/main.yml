name: Kogama Version Check

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up environment
      run: |
        mkdir downloads
        echo "DOWNLOAD_DIR=$(pwd)/downloads" >> $GITHUB_ENV

    - name: Check kogama [www] Updates
      run: bash .github/workflows/scripts/update.sh
      env:
        API_URL: https://api-www.kgoma.com/v1/api/server/unity/standalone-url/

    - name: Check kogama [br] Updates
      run: bash .github/workflows/scripts/update.sh
      env:
        API_URL: https://api-br.kgoma.com/v1/api/server/unity/standalone-url/

    - name: Check kogama [friends] Updates
      run: bash .github/workflows/scripts/update.sh
      env:
        API_URL: https://api-friends.kgoma.com/v1/api/server/unity/standalone-url/

    - name: Order markdown version table
      if: env.KOGAMA_UUIDS != ''
      run: |
        {
          head -n 2 "$PWD/version.md"
          tail -n +3 "$PWD/version.md" | sort -r -t '|' -k4 -n
        } > temp_version.md && mv temp_version.md "$PWD/version.md"

    - name: Commit and push if there are changes
      if: env.KOGAMA_UUIDS != ''
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.md
        git commit -m "Add new version" || echo "No changes to commit"
        git push

    - name: Upload release assets
      if: env.KOGAMA_UUIDS != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/versions
        asset_path: downloads/kogama-*.zip
        asset_name: kogama-*.zip
        asset_content_type: application/zip
